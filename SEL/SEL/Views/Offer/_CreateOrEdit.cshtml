@model SEL.Models.Offer

@* This partial view defines form fields that will appear when creating and editing entities *@

<div class="editor-label">
    @Html.LabelFor(model => model.name)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.name)
    @Html.ValidationMessageFor(model => model.name)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.description)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.description)
    @Html.ValidationMessageFor(model => model.description)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.beginDate)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.beginDate)
    @Html.ValidationMessageFor(model => model.beginDate)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.endDate)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.endDate)
    @Html.ValidationMessageFor(model => model.endDate)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.city)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.city)
    @Html.ValidationMessageFor(model => model.city)
</div>
<div id="tag">
    @for (int i = 0; i < 10; i++)
    {
        <p class="tag-@i">
            @Html.DropDownList("tagList", new SelectList(@ViewBag.tagList), "Select tag", new { @class = "tag" + @i })
        </p>
    }
</div>

<form>
    <fieldset class="details">
        
        @Html.HiddenFor(model => model.latitude, new { data_geo = "lat" })
        @Html.HiddenFor(model => model.longitude, new { data_geo = "lng" })



    </fieldset>
</form>
<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?libraries=places&sensor=false"></script>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.js"></script>
<script src="~/Scripts/jquery.geocomplete.js"></script>

<script>

    $(document).ready(function ($) {
    $(function ($) {

        $("#city").geocomplete({
            details: ".details",
            detailsAttribute: "data-geo",
            types: ["geocode", "establishment"],
        });
        $("#city").geocomplete(function () {
        });

        $("#city").blur(function () {
            $("#geocomplete").trigger("geocode");
        });
        $("#examples a").click(function () {
            $("#geocomplete").val($(this).text()).trigger("geocode");
            return false;
        })
         });

    });
</script>
<script>
    $(document).ready(function () {
        var cpt = 0;
        for (var i = 1; i < 15; i++) {
            $(".tag-" + i).hide();
        }
        $("#tag").change(function () {
            cpt++;
            $(".tag-" + cpt).show();
        });

        var offerTags = @Html.Raw(Json.Encode(ViewBag.offerTags));
        if(offerTags!=null)
        {
            for(var i=0;i<offerTags.length;i++)
            {
                $(".tag-" + i+" option").filter(function() { 
                    return ($(this).text() == offerTags[i]); //To select Blue
                }).prop('selected', true);
                $(".tag-"+i).show();
                cpt++;
            }
        }

            
        

    });
</script>

